name: Publish Van

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get Version
      run: |
        VERSION=$(jq -r '.version' package.json)
        echo "PKG_VERSION=$VERSION" >> $GITHUB_ENV

    - name: Setup pnpm
      uses: pnpm/action-setup@v4.1.0
      with:
        version: 9.12.3

    - name: Cache
      id: cache
      uses: actions/cache@v4.2.3
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}

    - name: Install
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      run: pnpm install

    - name: Build
      run: pnpm run build-prod && npx vsce package --no-dependencies

    - name: Publish
      env:
        VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
      run: npx vsce publish -p $VSCE_TOKEN --no-dependencies

    - name: Create Tag
      uses: ncipollo/release-action@v1.14.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: "v$PKG_VERSION"
        release_name: Release "v$PKG_VERSION"
        draft: false
        prerelease: false
